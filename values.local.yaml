# Default values for v2board.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

clusterDomain: ahdark-cluster-gke.ahdark.net

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
# fsGroup: 2000
securityContext: {}

podAnnotations: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

nginx:
  image:
    repository: asia-east2-docker.pkg.dev/ahdark-services/star-horizon/v2board-nginx
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  service:
    type: ClusterIP
    port: 80

  # Configure resource requests and limits
  # ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

php:
  image:
    repository: asia-east2-docker.pkg.dev/ahdark-services/star-horizon/v2board-php
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}

  service:
    type: ClusterIP
    port: 9000

  # Configure resource requests and limits
  # ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nfs:
  enabled: true
  image:
    repository: gcr.io/google_containers/volume-nfs
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: "standard-rwo"
    existingClaim: ""

ingress:
  enabled: true
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: v2board.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: v2board-tls
  #    hosts:
  #      - v2board.local

  # Configure extra options for liveness and readiness probes
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

queue:
  image:
    repository: asia-east2-docker.pkg.dev/ahdark-services/star-horizon/v2board-php
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  # Number of replicas
  replicaCount: 1

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}

  service:
    type: ClusterIP
    port: 9000

  # Configure extra options for liveness and readiness probes
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  # Configure resource requests and limits
  # ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

## MariaDB chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/mariadb/values.yaml
##
mariadb:
  ## @param mariadb.enabled Deploy a MariaDB server to satisfy the applications database requirements
  ## To use an external database set this to false and configure the `externalDatabase.*` parameters
  ##
  enabled: true
  ## @param mariadb.architecture MariaDB architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: standalone
  ## MariaDB Authentication parameters
  ## @param mariadb.auth.rootPassword MariaDB root password
  ## @param mariadb.auth.database MariaDB custom database
  ## @param mariadb.auth.username MariaDB custom username
  ## @param mariadb.auth.password MariaDB custom user password
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mariadb#setting-the-root-password-on-first-run
  ##      https://github.com/bitnami/containers/blob/main/bitnami/mariadb/README.md#creating-a-database-on-first-run
  ##      https://github.com/bitnami/containers/blob/main/bitnami/mariadb/README.md#creating-a-database-user-on-first-run
  ##
  auth:
    rootPassword: ""
    database: v2board
    username: v2board
    password: ""
  ## MariaDB Primary configuration
  ##
  primary:
    ## MariaDB Primary Persistence parameters
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
    ## @param mariadb.primary.persistence.enabled Enable persistence on MariaDB using PVC(s)
    ## @param mariadb.primary.persistence.storageClass Persistent Volume storage class
    ## @param mariadb.primary.persistence.accessModes [array] Persistent Volume access modes
    ## @param mariadb.primary.persistence.size Persistent Volume size
    ##
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
      - ReadWriteOnce
      size: 8Gi

## External Database Configuration
## All of these values are only used if `mariadb.enabled=false`
##
externalDatabase:
  ## @param externalDatabase.host External Database server host
  ##
  host: localhost
  ## @param externalDatabase.port External Database server port
  ##
  port: 3306
  ## @param externalDatabase.user External Database username
  ##
  user: v2board
  ## @param externalDatabase.password External Database user password
  ##
  password: ""
  ## @param externalDatabase.database External Database database name
  ##
  database: v2board
  ## @param externalDatabase.existingSecret The name of an existing secret with database credentials. Evaluated as a template
  ## NOTE: Must contain key `mariadb-password`
  ## NOTE: When it's set, the `externalDatabase.password` parameter is ignored
  ##
  existingSecret: ""

redis:
  ## @param redis.enabled Deploy a Redis server to satisfy the applications database requirements
  ## To use an external database set this to false and configure the `externalDatabase.*` parameters
  ##
  enabled: true
  ## @param architecture Redis&reg; architecture. Allowed values: `standalone` or `replication`##
  architecture: standalone
  ## @param redis.auth
  auth:
    ## @param redis.auth.enabled Enable Redis authentication
    ##
    enabled: true
    ## @param redis.auth.existingSecret The name of an existing secret with Redis credentials. Evaluated as a template
    ## NOTE: Must contain key `redis-password`
    ## NOTE: When it's set, the `redis.auth.password` parameter is ignored
    ##
    existingSecret: ""
    ## @param redis.auth.password Redis password
    ##
    password: ""

externalRedis:
  ## @param externalRedis.host External Redis server host
  ##
  host: localhost
  ## @param externalRedis.port External Redis server port
  ##
  port: 6379
  ## @param externalRedis.password External Redis password
  ##
  password: ""
  ## @param externalRedis.existingSecret The name of an existing secret with Redis credentials. Evaluated as a template
  ## NOTE: Must contain key `redis-password`
  ## NOTE: When it's set, the `externalRedis.password` parameter is ignored
  ##
  existingSecret: ""
